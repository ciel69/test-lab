{"version":3,"sources":["assets/img/icon.svg","assets/img/pc.png","assets/img/bg-header.png","store/reducers.js","store/index.js","components/Field/Text/index.js","components/Field/Select/index.js","components/Field/Сheckbox/index.js","components/Form/validate.js","components/Form/Form.js","components/Form/FormWrap.js","components/Header/Header.js","components/Posts/ItemPost.js","components/Posts/Posts.js","components/Modal/Modal.js","components/InformationList/InformationList.js","components/Body/Body.js","components/Footer/Footer.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","reducers","form","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","CustomText","props","input","label","changeInput","disabled","meta","touched","error","active","className","value","helperText","onTrailingIconSelect","name","trailingIcon","role","icon","CustomSelect","options","Сheckbox","type","validate","values","errors","forEach","field","email","test","reduxForm","handleSubmit","change","onSubmit","Field","component","Text","Select","Button","variant","FormWrap","val","console","log","Header","Container","Row","Col","lg","ItemPost","post","title","description","imgUrl","src","alt","Icon","Posts","listPosts","Array","apply","map","item","index","id","col","key","CustomModal","show","onClose","Modal","onHide","closeButton","Title","Body","Footer","onClick","InformationList","useState","setShow","handleShow","imagePc","md","store","createStore","rootReducer","applyMiddleware","thunk","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9d43a35c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.4a3cf183.svg\";","module.exports = __webpack_public_path__ + \"static/media/pc.1395b5c9.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-header.69e843a0.png\";","import { combineReducers } from 'redux';\r\nimport { reducer as form } from 'redux-form';\r\n\r\nconst reducers = {\r\n  form, // the state and validation of form fields\r\n};\r\n\r\nexport default combineReducers(reducers);","import { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default function() {\r\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport className from 'classnames';\r\n\r\nimport TextField, {HelperText, Input} from '@material/react-text-field';\r\nimport MaterialIcon from '@material/react-material-icon';\r\n\r\nimport './style.scss';\r\n\r\nconst CustomText = (props) => {\r\n  const {\r\n    input,\r\n    label,\r\n    changeInput,\r\n    disabled,\r\n    meta: { touched, error, active }\r\n  } = props;\r\n\r\n  const clearValue = () => {\r\n    changeInput(input.name, '');\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      className={className('custom-field', {\r\n        'error-field': touched && error,\r\n        'valid-field': input.value && !error,\r\n        disabled: disabled,\r\n      })}\r\n      label={label}\r\n      helperText={\r\n        !active &&\r\n        touched &&\r\n        error &&\r\n        <HelperText>{error}</HelperText>}\r\n      onTrailingIconSelect={clearValue}\r\n      trailingIcon={!input.value ? <MaterialIcon role=\"button\"/> : <MaterialIcon role=\"button\" icon=\"close\"/>}\r\n    ><Input\r\n      value={input.value}\r\n      {...input}\r\n    />\r\n    </TextField>\r\n  );\r\n};\r\n\r\nCustomText.propTypes = {\r\n  label: PropTypes.string,\r\n  input: PropTypes.object,\r\n  meta: PropTypes.object,\r\n  disabled: PropTypes.bool,\r\n  changeInput: PropTypes.func,\r\n};\r\n\r\nexport default CustomText;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport className from 'classnames';\r\n\r\nimport {HelperText} from '@material/react-text-field';\r\n\r\nimport Select from '@material/react-select';\r\n\r\nimport '@material/react-menu/dist/menu.css';\r\nimport '@material/react-select/dist/select.css';\r\n\r\nconst CustomSelect = (props) => {\r\n  const {\r\n    input,\r\n    options = [],\r\n    label,\r\n    disabled,\r\n    meta: { touched, error, active }\r\n  } = props;\r\n\r\n  return (\r\n    <Select\r\n      className={className('custom-field', {\r\n        'error-field': touched && error,\r\n        'valid-field': input.value && !error,\r\n        disabled: disabled,\r\n      })}\r\n      label={label}\r\n      value={input.value}\r\n      options={options}\r\n      helperText={\r\n        !active &&\r\n        touched &&\r\n        error &&\r\n        <HelperText>{error}</HelperText>}\r\n      {...input}\r\n    />\r\n  );\r\n};\r\n\r\nCustomSelect.propTypes = {\r\n  label: PropTypes.string,\r\n  input: PropTypes.object,\r\n  meta: PropTypes.object,\r\n  disabled: PropTypes.bool,\r\n  changeInput: PropTypes.func,\r\n};\r\n\r\nexport default CustomSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport className from 'classnames';\r\n\r\nimport './style.scss';\r\nimport {HelperText} from '@material/react-text-field';\r\n\r\nconst Сheckbox = (props) => {\r\n  const {\r\n    input,\r\n    label,\r\n    disabled,\r\n    meta: { touched, error, active }\r\n  } = props;\r\n  return (\r\n    <div className={className('custom-check', {\r\n      'error-field': touched && error,\r\n      disabled: disabled,\r\n    })}>\r\n      <label>\r\n        <input\r\n          type=\"checkbox\"\r\n          {...input}\r\n        />\r\n        <div className={className('custom-check__indicate', {\r\n          'active': input.value,\r\n        })}>\r\n          {!active &&\r\n          touched &&\r\n          error &&\r\n          (<HelperText>{error}</HelperText>)\r\n          }\r\n        </div>\r\n        <span>{label}</span>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nСheckbox.propTypes = {\r\n  label: PropTypes.string,\r\n  input: PropTypes.object,\r\n  meta: PropTypes.object,\r\n  disabled: PropTypes.bool,\r\n  changeInput: PropTypes.func,\r\n};\r\n\r\nexport default Сheckbox;\r\n","const validate = values => {\r\n  const errors = {};\r\n  const requiredFields = [\r\n    'email',\r\n    'name',\r\n    'country',\r\n    'agree',\r\n  ];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = 'Required';\r\n    }\r\n  });\r\n  if (\r\n    values.email &&\r\n    !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n  ) {\r\n    errors.email = 'Enter correct E-Mail';\r\n  }\r\n  if (\r\n    values.name &&\r\n    !/^[a-zA-ZА-Я.\\s-]*$/i.test(values.name)\r\n  ) {\r\n    errors.name = 'Enter correct name';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","import React from 'react';\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport PropTypes from 'prop-types';\r\nimport {Button} from 'react-bootstrap'\r\n\r\nimport Text from '../Field/Text';\r\nimport Select from '../Field/Select';\r\nimport Сheckbox from '../Field/Сheckbox';\r\n\r\nimport validate from './validate';\r\n\r\nimport '@material/react-text-field/dist/text-field.css';\r\nimport './style.scss';\r\n\r\nconst Form = (props) => {\r\n  const {handleSubmit, change} = props;\r\n\r\n  const options = [\r\n    {\r\n      label: null,\r\n      value: null,\r\n    },\r\n    {\r\n      label: 'Russian Federation',\r\n      value: 'ru',\r\n    },\r\n    {\r\n      label: 'USA',\r\n      value: 'usa',\r\n    },\r\n    {\r\n      label: 'Germany',\r\n      value: 'ger',\r\n    },\r\n    {\r\n      label: 'Italy',\r\n      value: 'italy',\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"app__form form\">\r\n      <div className=\"form__title\">Request form</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form__row\">\r\n          <Field\r\n            name=\"email\"\r\n            label=\"Enter your E-Mail\"\r\n            component={Text}\r\n            changeInput={change}\r\n            type=\"email\"\r\n          />\r\n        </div>\r\n        <div className=\"form__row\">\r\n          <Field\r\n            name=\"name\"\r\n            label=\"Enter your name\"\r\n            component={Text}\r\n            changeInput={change}\r\n            type=\"email\"\r\n          />\r\n        </div>\r\n        <div className=\"form__row\">\r\n          <Field\r\n            name=\"country\"\r\n            label=\"Select your country\"\r\n            component={Select}\r\n            options={options}\r\n          />\r\n        </div>\r\n        <div className=\"form__row\">\r\n          <Field\r\n            name=\"agree\"\r\n            label=\"I agree with Terms & Conditions\"\r\n            component={Сheckbox}\r\n          />\r\n        </div>\r\n        <div className=\"form__buttons\">\r\n          <Button type=\"submit\">Submit</Button>\r\n          <Button variant=\"link\">Hyperlink</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func\r\n};\r\n\r\nexport default reduxForm({\r\n  form: 'formRequest',\r\n  validate\r\n})(Form);\r\n","import React from 'react';\r\n\r\nimport Form from './Form';\r\n\r\nconst FormWrap = () => {\r\n  const submit = (val) => {\r\n    console.log('submit', val);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submit}/>\r\n  )\r\n};\r\n\r\nexport default FormWrap;","import React from 'react';\r\n\r\nimport {Container, Row, Col} from 'react-bootstrap'\r\n\r\nimport FormWrap from '../Form/FormWrap'\r\n\r\nimport './style.scss';\r\nimport '../../assets/img/bg-header.png';\r\n\r\nconst Header = () => (\r\n  <header className=\"app__header header\">\r\n    <Container className=\"header__container\">\r\n      <Row>\r\n        <Col lg={8}>\r\n          <h2 className=\"header__title\">Banner header</h2>\r\n          <p className=\"header__description\">\r\n            Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed\r\n            do eiusmod tempor incididunt ut labore et dolore magna aliqua.\r\n            Ut enim ad minim veniam, quis nostrud\r\n          </p>\r\n        </Col>\r\n        <Col lg={4}>\r\n          <FormWrap />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </header>\r\n);\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Icon from '../../assets/img/icon.svg';\r\n\r\nimport './style.scss';\r\n\r\nconst ItemPost = (props) => {\r\n  const {title, description, imgUrl} = props.post;\r\n  return (\r\n    <div className=\"post post__item\">\r\n      <img className=\"post__image\" src={imgUrl} alt=\"title\"/>\r\n      <div className=\"post__content\">\r\n        <div className=\"post__title\">\r\n          {title}\r\n          <img className=\"post__icon\" src={Icon} alt=\"Icon\"/>\r\n        </div>\r\n        <div className=\"post__description\">{description}</div>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nItemPost.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    imgUrl: PropTypes.string,\r\n    col: PropTypes.number,\r\n  })\r\n};\r\n\r\nexport default ItemPost;\r\n","import React from 'react';\r\nimport {Row, Col} from 'react-bootstrap'\r\n\r\nimport ItemPost from './ItemPost';\r\n\r\nconst Posts = () => {\r\n  const listPosts = Array.apply(null, Array(5)).map((item, index) => ({\r\n    id: index,\r\n    title: `Post header ${index+1}`,\r\n    description: 'Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n    imgUrl: `./post${index+1}.png`,\r\n    col: index <=2 ? 4 : 6\r\n  }));\r\n\r\n  return (\r\n    <Row>\r\n      {listPosts.map(item => <Col key={item.id} lg={item.col}><ItemPost post={item}/></Col>)}\r\n    </Row>\r\n\r\n  )\r\n};\r\n\r\nexport default Posts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Modal, Button} from 'react-bootstrap';\r\n\r\nimport './style.scss';\r\n\r\nconst CustomModal = (props) => {\r\n  const {show, onClose} = props;\r\n\r\n  return (\r\n    <Modal className=\"app__custom-modal custom-modal\" show={show} onHide={onClose}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>External link</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore\r\n        et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex\r\n        ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat\r\n        nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim\r\n        id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque\r\n        laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae\r\n        dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia\r\n        consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem\r\n        ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut\r\n        labore et dolore magnam aliquam quaerat voluptatem.</Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"link\" onClick={onClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"primary\" onClick={onClose}>\r\n          Accept\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCustomModal.propTypes = {\r\n  show: PropTypes.bool,\r\n  onClose: PropTypes.func,\r\n};\r\n\r\nexport default CustomModal;","import React, {useState} from 'react';\r\nimport {Container, Row, Col} from 'react-bootstrap';\r\n\r\nimport Modal from '../Modal/Modal';\r\n\r\nimport imagePc from '../../assets/img/pc.png'\r\n\r\nimport './style.scss';\r\n\r\nconst InformationList = () => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <div className=\"app__information-list information-list\">\r\n      <Container>\r\n        <Row>\r\n          <Col lg={6} className=\"d-sm-none d-none d-lg-block\">\r\n            <img className=\"information-list__image\" src={imagePc} alt=\"PC image\"/>\r\n          </Col>\r\n          <Col lg={6} md={12}>\r\n            <h3 className=\"information-list__title\">Title text</h3>\r\n            <ol>\r\n              <li onClick={handleShow}>\r\n                <span>\r\n                  Duis aute irure dolor in reprehenderit<sup>1</sup> in voluptate velit\r\n                </span>\r\n              </li>\r\n              <li onClick={handleShow}>\r\n                <span>\r\n                  Ullamco laboris nisi ut aliquip ex ea commodo consequat\r\n                </span>\r\n              </li>\r\n              <li onClick={handleShow}>\r\n                <span>\r\n                  Ut enim ad minim veniam, quis nostrud exercitation\r\n                </span>\r\n              </li>\r\n              <li onClick={handleShow}>\r\n                <span>\r\n                  Et dolore magna aliqua\r\n                </span>\r\n              </li>\r\n              <li onClick={handleShow}>\r\n                <span>\r\n                  Sed do eiusmod tempor<sup>2</sup> incididunt ut labore\r\n                </span>\r\n              </li>\r\n              <li onClick={handleShow}>\r\n                <span>\r\n                  Lorem ipsum dolor sit amet<sup>3</sup> consectetur adipisicing elit\r\n                </span>\r\n              </li>\r\n            </ol>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <Modal show={show} onClose={handleClose}/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default InformationList;\r\n","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nimport Posts from '../Posts/Posts';\r\nimport InformationList from '../InformationList/InformationList';\r\n\r\nimport './style.scss';\r\n\r\nconst Body = () => {\r\n  return (\r\n    <div className=\"app__body body\">\r\n      <Container>\r\n        <Posts/>\r\n      </Container>\r\n      <InformationList/>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Body;\r\n","import React from 'react';\r\nimport {Container} from 'react-bootstrap';\r\n\r\nimport './style.scss';\r\n\r\nconst Footer = () => (\r\n  <footer className=\"app__footer footer\">\r\n    <Container className=\"footer__content\">\r\n      <p><sup>1</sup> Reprehenderit - Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore</p>\r\n      <p><sup>2</sup> Tempor - Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.</p>\r\n      <p><sup>3</sup> Amet - Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.</p>\r\n    </Container>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport {Provider} from 'react-redux';\n\nimport configureStore from '../../store'\n\nimport Header from '../../components/Header/Header';\nimport Body from '../../components/Body/Body';\nimport Footer from '../../components/Footer/Footer';\n\nimport './App.scss';\n\nconst store = configureStore();\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"app\">\n        <Header/>\n        <Body/>\n        <Footer/>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/scss/custom-bootstrap.scss';\nimport './assets/scss/fonts.scss';\nimport './index.css';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}